1. When would you want to use a remote repository rather than keeping all your work local?
I suppose if I were working on a project with remote partners and there were changes I wanted to make available immediately to everyone involved, then making a commit on a remote repository would make sense.
2.  Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository? 
If there are changes that are not tested, or if one person in a collaborative project uploads new code, you might want the option to forego the new changes until more thorough testing.
Alternatively, you might want to attempt your own solution to a problem independently of the new changes on the remote.  
Or, maybe you want to wait until more commits are made on the remote, so that the new additions to the project are workable and bug-free.
Describe the differences between forks, clones, and branches. When would you use one instead of another?
A clone is a copy of a repository made on a local machine originating from another location on a local machine or GitHub.  
A fork is a clone of a repository on GitHub to another repository on GitHub.  
A branch is a copy of a commit history, made within the same local repository, where separate changes can be made within the same repository.  
You might make a clone of a repository if you wanted to collaborate with someone on a project on your local machine, then upload the changes to GitHub later, or if you wanted to make drastic changes to a project that had been started on the same machine.
You might fork a repository if you want to make as-yet-unauthorized changes, or changes for your own purposes, to an existing project on GitHub.  
You would make a new branch in an existing repository if you wanted to work on an extended bit of code that would supplement the program, or wanted to experiment with the program, but weren't sure you would keep the results.