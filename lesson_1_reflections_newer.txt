1. Using diff to spot differences between files becomes more useful the longer the code is.
Checking just 20 lines of code for differences is tedious, but it would be nearly impossible at 10,000 lines.
Even with just 500 lines, it could take hours to spot all of the differences.
Bugs are also easier to spot because a typo or bug that you make in one version would have to be made in exactly the same way in a different version, so if the program ran well one time, but not in the newer version, then the typing error becomes more obvious.

2. If you have easy access to the history of a file, you can go back and find something that had worked well in an earlier version, but maybe was replaced in a later version. 
You can also see the foundational steps that a programmer took to build the program.

3. The good thing about manually saving your commits in Git is that you can select sensible steps or versions to save.  
There is no reason for an arbitrary difference between versions.
The bad thing is that it relies on good habits and memory to make sure that the files get saved regularly so that work isn't lost.  
The process is more deliberate, and less like a safety net than Google Docs offers.
